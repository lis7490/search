#Линейный поиск и сложности алгоритмов
import timeit
def search(arr, n):
    ind = 0
    for i in arr:
        if i == n:
            return ind
        ind += 1
    return -1

#print(search([1, 2, 3, 50, 70], ))

thousend = []
for i in range(1000):
    thousend.append(i)

hundred = []
for i in range(100):
    hundred.append(i)



ten = [1, 2, 3, 4, 5, 35, 37, 39, 42, 48]


s = """def tsearch():
    search(thousend, 999)"""

print(timeit.timeit(stmt=s, number=100))
# Список из 100 чисел:
# [1, 2, 3, 4, 5, 35, 37, 39, 42, 48, 52, 55, 59, 61, 75, 83, 84, 85, 86, 90, 92, 94, 96, 113, 115, 118, 138, 198, 213, 215, 225, 285, 313, 301, 303, 321, 3535, 356, 258, 565, 454, 858, 696, 474, 368, 1245, 235, 6967, 874, 888, 999, 1234, 25874, 23568, 9363211, 858585, 2323232, 12345, 23568, 7019785, 26837, 3956, 567, 9287598, 357354, 35465, 3636, 987654, 32134564, 9846631384, 580398093, 9632, 45854783, 0496940, 656565, 3151313311, 79798, 13321, 46456, 79878979, 5454544, 656656, 44554, 7878787, 89898, 32323, 12122, 84844, 595995, 755757, 999393, 1313311, 54545, 65565, 9898, 82282, 636366, 19191, 48484, 62626, 8888]
# время для 10-го элемента списка - (4,4 - 6,3) секунды
# время для 50-го элемента списка - (4,4 - 6,3) секунды
# время для 100-го элемента списка - (4,1 - 6) секунд
# для всех измерений примерно одно и то-же время.

# Список из 10 чисел
# [1, 2, 3, 4, 5, 35, 37, 39, 42, 48]
# время для 10-го и 1-го элемента списка - (4,3 - 5) секунд


